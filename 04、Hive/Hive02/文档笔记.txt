课前回顾:
1) 数据仓库基本知识:
	1.1) 数据仓库概念:   本身自己不消耗数据, 也不生产数据  面向分析
	1,2) 数据仓库的特点 :  
			面向主题:  分析的需求
			集成性:  
			非易失性 :  都是已经发生过的数据 , 一般不允许对数据进行修改
			时变性  :  
	1.3) 数据仓库 和 数据库的区别 :
			OLAP      OLTP
			查询	对数据进行增删改查
					捕获数据
					和业务系统打交道, 进行事务 的处理
	1.4) 数据仓库分层架构: 三层
		 源数据层 ODS
		 数据仓库层  DW
		 数据应用层 APP
	1.5) 数据仓库的元数据的管理:  模型(表, 库) ....
				一般如何管理:  将元数据放置在 数据库中
	
2) hive : 大数据用于数据仓库的一款软件	, 基于hadoop实现的
		存储使用hdfs  , 计算使用 MapReduce , hive类似于是一个可以编写SQL的客户端, 以及用于转换MapReduce的客户端
	hive的架构:  
	hive 的安装部署: 第二种
	hive的交互窗口:  
	hive的ddl语句:  

今日内容:
1) hive的DQL语句实现
2) hive的参数的传递
3) hive的基本的内置的普通函数



1) hive的DQL语句:
	SELECT [ALL | DISTINCT] select_expr, select_expr, ...   
	FROM table_reference
	[WHERE where_condition] 
	[GROUP BY col_list [HAVING condition]] 
	[CLUSTER BY col_list 
	  | [DISTRIBUTE BY col_list] [SORT BY| ORDER BY col_list] 
	] 
	[LIMIT number]
	
	
	ORDER BY :  主要是用来执行全局排序的操作, reduce的数据只能有一个
	SORT BY  :  主要是用来执行局部排序操作:  reduce的数量有多个才行, 否则和 order by的作用是一样的
	DISTRIBUTE BY col_list :  决定在执行的时候, 让那个字段为 k2往下发, 理解为 MapReduce中 分区, 一般和SORT BY组合使用, 实现分区排序
	CLUSTER BY col_list :  DISTRIBUTE BY +  SORT BY的组合功能, 要求:  分区的字段 和  排序的字段都是同一个, 而且只能正序排序
	
	1.1)) 单表查询:  
			group by :  分组操作, 在hive中, 如果使用分组的条件, 那么在select后面的字段, 只能从group by中字段中挑选或者使用聚合函数 
				在group  by 后 , 如果要想对数据进行筛选, 只能使用 having , 不能使用  where 条件
						having后面, 一般跟的都是聚合性的函数
	
	1.2) 多表查询:  
		在hive中, 也是可以进行多表查询, 但是连接条件只能是=值连接
		内连接:  
			显示内连接 表1 join  表2 on  连接条件
			隐式内连接 表1,表2  where  连接条件
		外连接:
			左外连接 :    list  join 
				将左表的数据全部显示, 如果右表中没有匹配的, 使用null替代
			右外连接 ：  right join
				将右表的数据全部显示, 如果左表中没有匹配的, 使用null替代
			全外连接 ：   FULL OUTER JOIN
				将两个表的数据全部显示出来, 如果右表中没有匹配的, 使用null替代,如果左表中没有匹配的, 使用null替代
					
		在继续多表查询的时候, 可以连接很多的表, 连接表的数量, 和 连接条件的数据
			表的数量:  连接条件关系
				n			n-1
			一般没有连接条件, 或者连接条件写错了, 会出现笛卡尔积的现象
			
	1.3) 排序: 	
		sort by:  局部排序, 要想实现局部排序, 需要保证有多个reduceTask数量
		DISTRIBUTE BY : 分区操作,在转换成MapReduce后, k2 是那个字段的数据, 底层使用 hash取模计算进行分区
		CLUSTER BY  :  DISTRIBUTE BY + sort by 组合 后的效率, 是组合的简写方式
			注意:  CLUSTER BY 中字段 , 按照这个字段进行分区 和 排序的操作
				当distribute by和sort by字段相同时，可以使用cluster by方式。
				cluster by除了具有distribute by的功能外还兼具sort by的功能。但是排序只能是正序排序，不能指定排序规则为ASC或者DESC。



2. hive的shell参数:  
	如何设置hive的参数 :  分为三种方式来设置
		2.1) 使用 hive-site.xml来设置   全局的设置
		2.2) 使用 hive --hiveconf  设置   session级别的设置
		2.3) 在hive的客户端内部, 使用  set的方式来设置  session级别的设置
		
			三种设置参数的优先级(从低到高):   使用配置文件 < 使用hive的命令 < 使用  set命令

			注意: 虽然提供了三种设置参数的方式, 但是, 不能保证所有的参数都可以使用三种来设置, 
				比如说:  连接元数据库的设置, 必须配置在配置文件中  系统性的配置

	如何来动态给传递的参数 :  
		在使用hive中, 需要编写hive的sql语句, 一般都要将SQL写好以后, 存储到sql的脚本的文件中了, 方便后面再次使用SQL
			select count(oid) from  order where  month = "20190906"; 
			select count(oid) from  order where  month = "20190907"; 

		动态传递参数的方式: 三种
			1)  --hiveconf : 写法  hive  --hiveconf mapred.reduce.tasks=50
					取值:  set  mapred.reduce.tasks=${hiveconf:mapred.reduce.tasks}
			2)  --hivevar  :  写法  hive  --hivevar month = 20190907 
					取值:  select count(oid) from  order where  month = ${hivevar:month} [|  ${month} ]  ;
			3)  -d   :  和第二种方案是完全一致的  hive -d  month = 20190907 
					取值:  select count(oid) from  order where  month = ${month}   ;
		
			注意:  如果使用第一种方案, 可以传递系统的配置信息, 也可以传递普通的变量
					如果使用第二种和第三种, 不可以传递系统的配置, 只可以传递普通的变量

3) hive的函数介绍:
		如何查看hive支持的函数:  show functions;
		如何查看某一个函数的帮助信息:  desc function extended  函数名称

	数值函数:  round,  floor   ,ceil ,  rand 
	日期函数:  from_unixtime ,  unix_timestamp , to_date   year   month   day   hour minute second  datediff  date_add   date_sub
	
	条件函数: 
		条件判断函数 主要用二种格式
			第一种格式:  case A  when  B  then C [when D  then E ....] else F   end
				如果 A  等于 B  返回C  如果 A等于D  返回 E  否则返回F
				
			第二种格式:  case  when  A  then B [when D  then E ....]   else  F  end
				如果A的条件成功, 返回B 如果D 条件成功, 返回E , 否则 返回F
	
	
	聚合函数:  sum  count  max  min avg
	
	
	复杂类型:  
		map:  有key 和value , 在构建的时候, map中数据必须是成双成对的出现, 不可以是奇数个 ,  key是原始类型(Stirng), value的类型可以不同的
		array : 在构建的时候, 可以放置多了, 但是类型必须是一致的
	
